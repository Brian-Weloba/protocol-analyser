import { Elysia, type Context } from 'elysia';
interface PluginOptions {
    /** Path to metrics endpoint (default /metrics) */
    metricsPath: string;
    /** Buckets for duration histogram (default [0.003, 0.03, 0.1, 0.3, 1.5, 10]) */
    durationBuckets: number[];
    /** Additional static labels for all metrics */
    staticLabels: Record<string, string>;
    /** Dynamic labels for all metrics */
    dynamicLabels: Record<string, (ctx: Context) => string>;
    /** Use normalized route path for metrics */
    useRoutePath: boolean;
}
interface UserPluginOptions extends Partial<PluginOptions> {
}
declare const _default: (userOptions?: UserPluginOptions) => Elysia<"", {
    decorator: {};
    store: {};
    derive: {
        readonly endTimer: (labels?: Partial<Record<string, string | number>> | undefined) => number;
    };
    resolve: {};
}, {
    typebox: import("@sinclair/typebox").TModule<{}>;
    error: {};
}, {
    schema: {};
    macro: {};
    macroFn: {};
    parser: {};
}, {
    [x: string]: {
        get: {
            body: unknown;
            params: {};
            query: unknown;
            headers: unknown;
            response: {
                200: Response;
            };
        };
    };
}, {
    derive: {};
    resolve: {};
    schema: {};
}, {
    derive: {};
    resolve: {};
    schema: {};
}>;
export default _default;
